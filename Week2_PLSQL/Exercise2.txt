Scenario 1:
CREATE OR REPLACE PROCEDURE SafeTransferFunds(
    p_FromAccountID IN Accounts.AccountID%TYPE, p_ToAccountID IN Accounts.AccountID%TYPE, p_Amount IN NUMBER
) IS
    v_FromBalance Accounts.Balance%TYPE;
    v_ToBalance Accounts.Balance%TYPE;
BEGIN
    SELECT Balance INTO v_FromBalance FROM Accounts WHERE AccountID = p_FromAccountID FOR UPDATE;
    SELECT Balance INTO v_ToBalance FROM Accounts WHERE AccountID = p_ToAccountID FOR UPDATE;

    IF v_FromBalance < p_Amount THEN RAISE_APPLICATION_ERROR(-20001, 'Insufficient funds in the source account.');
    END IF;

    UPDATE Accounts
    SET Balance = Balance - p_Amount
    WHERE AccountID = p_FromAccountID;
    UPDATE Accounts
    SET Balance = Balance + p_Amount
    WHERE AccountID = p_ToAccountID;

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error during fund transfer: ' || SQLERRM);
        ROLLBACK;
END SafeTransferFunds;
/


Scenario 2:
CREATE OR REPLACE PROCEDURE UpdateSalary(
    p_EmployeeID IN Employees.EmployeeID%TYPE,
    p_Percentage IN NUMBER
) IS
    v_Salary Employees.Salary%TYPE;
BEGIN
    SELECT Salary INTO v_Salary FROM Employees WHERE EmployeeID = p_EmployeeID FOR UPDATE;
    v_Salary := v_Salary + (v_Salary * p_Percentage / 100);
    UPDATE Employees
    SET Salary = v_Salary
    WHERE EmployeeID = p_EmployeeID;

    COMMIT;

EXCEPTION
    WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('Error: Employee ID ' || p_EmployeeID || ' does not exist.');
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error updating salary: ' || SQLERRM);
        ROLLBACK;
END UpdateSalary;
/



Scenario 3:
CREATE OR REPLACE PROCEDURE AddNewCustomer(
    p_CustomerID IN Customers.CustomerID%TYPE,
    p_Name IN Customers.Name%TYPE,
    p_DOB IN Customers.DOB%TYPE,
    p_Balance IN Customers.Balance%TYPE
) IS
BEGIN
    INSERT INTO Customers (CustomerID, Name, DOB, Balance, LastModified)
    VALUES (p_CustomerID, p_Name, p_DOB, p_Balance, SYSDATE);
    COMMIT;

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN DBMS_OUTPUT.PUT_LINE('Error: Customer ID ' || p_CustomerID || ' already exists.');
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error adding new customer: ' || SQLERRM);
        ROLLBACK;
END AddNewCustomer;
/